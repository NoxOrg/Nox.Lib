#
# Brand data loader definition
#

Name: Customer Loader

Description: Loads customer data 

Schedule:
  Start: Daily at 2am UTC
  Retry:
    Limit: 10
    DelaySeconds: 60
    DoubleDelayLimit: 5

LoadStrategy: 
  Type: MergeNew
  Columns: [CompanyCreateDate,CompanyEditDate,CompanyFinancialCreateDate,CompanyFinancialEditDateDate,CompanyPaymentTermCreateDate,CompanyPaymentTermEditDateDate,CompanyAddressCreateDate,CompanyAddressEditDateDate]


Target:
  Entity: Customer

Sources:
  - ConnectionVariable: ConnectionString:MasterDataSource
    Provider: SqlServer
    MinimumExpectedRecords: 30 
    Query: >-
      select 
        -- Header	---------------------------------------------------------------------------------------------
        'Titan'																		as 'SourceSystem',
        'INT_001_Cust'																as 'Type',
        ''																			as 'SubType',
        'D365FO'																	as 'TargetSystem',
        convert(varchar(20), getUTCDate(),120)										as 'CreateDateUTC',
        cast(Company.CompanyID as varchar)+
          '_'+
          replace(convert(varchar,getdate(),126),'-','')							as 'CorrelationId',
        -- Data		---------------------------------------------------------------------------------------------
        Company.CompanyID															as 'Id',
        Company.CompanyName															as 'CustName',
        ''																			as 'ExtInvoiceAccount',
        'TBC'																		as 'ProArCRMSystemId',
        'Trade'																		as 'CustGroup',
        IETFLanguageCode															as 'LanguageId',
        CompanyCustomerType.CustomerTypeID											as 'ExtCustClassificationId',
        ''																			as 'DunsNumber',
        isnull(CompanyCurrency.CurrencyCode, CentreCurrency.CurrencyCode)			as 'Currency',
        isnull(replace(CompanyFinancial.TaxNumber,' ',''),'')						as 'VATNum',
        ISNULL(TaxCountry.CountryCodeISO3Alpha,AddressCountry.CountryCodeISO3Alpha) as CountryRegionId,
        case 
          when exists (
            select * 
            from	dbo.CompanyTaxExemptCertificate 
            where	CompanyTaxExemptCertificate.CompanyID = Company.CompanyID 
            and		CompanyTaxExemptCertificate.ApplyExemptionOnAllServices=1
            and		GETDATE() between CompanyTaxExemptCertificate.CertEffectiveDate and ISNULL(CompanyTaxExemptCertificate.CertExpirationDate,'2078-12-31')
            ) 
            then 'EXEMPT'
          when Centre.CountryID = ISNULL(TaxCountry.CountryID,AddressCountry.CountryID) 
            then 'DOM'
          when EUCountry.CountryID IS NOT NULL 
            then 'EU'
          else 'ROW'
        end																		as ExtTaxGroup,
        ''																		as TaxWithholdCalculate_TH,
        ''																		as ExtTaxWithholdGroup_TH,
        'NET'+CAST(CompanyPaymentTerm.FixedDueDate as varchar)					as ExtPaymTermId,
        CompanyPaymentTerm.PaymentByID											as ExtPaymModeId,
        case when Centre.CountryID=610 then 'true' else 'false' end				as InclTax,
        case 
          when CompanyFinancial.IsSuspended=1 then 'SUSPENDED'
          when  CompanyFinancial.AccountBlockedDate is not null then 'BLOCKED'
          when Company.IsActive=0 then 'INACTIVE'
          else 'ACTIVE'
        end																		as ExtCredManAccountStatusId,
        'No'																	as ExtBlocked,
        isnull(FiscalStatusType.FiscalStatusTypeDescription,'')					as 'ExtProArCustomerTaxClassification',
        case 
          when PostalAddress.CountryID=Centre.CountryID 
          then 
            'Resident' 
          else 
            'NonResident'
        end																		as ExtProArTaxRegistrationType,
        Centre.CentreNumber														as ExtCompanyCentreId,
        -- ETLBox control fields --------------------------------------------------------------------------------------------------------
        Company.CreateDate														as CompanyCreateDate,
        Company.EditDate														as CompanyEditDate,
        CompanyFinancial.CreateDate												as CompanyFinancialCreateDate,
        CompanyFinancial.EditDate												as CompanyFinancialEditDateDate,
        CompanyPaymentTerm.CreateDate											as CompanyPaymentTermCreateDate,
        CompanyPaymentTerm.EditDate												as CompanyPaymentTermEditDateDate,
        CompanyAddress.CreateDate												as CompanyAddressCreateDate,
        CompanyAddress.EditDate													as CompanyAddressEditDateDate
        from	dbo.Company Company
        inner	join dbo.CompanyFinancial CompanyFinancial on CompanyFinancial.CompanyID=Company.CompanyID
        inner	join dbo.CompanyPaymentTerm CompanyPaymentTerm on CompanyPaymentTerm.CompanyID = Company.CompanyID and CompanyPaymentTerm.CompanyPaymentTermTypeID=1
        inner	join dbo.CompanyCustomerType CompanyCustomerType on CompanyCustomerType.CompanyID = Company.CompanyID and CompanyCustomerType.CompanyVersion = Company.CompanyVersion
        inner	join dbo.Centre Centre on Centre.CentreId = Company.HomeCentreID and Centre.IsCurrentVersion=1
        inner	join dbo.CompanyAddress CompanyAddress on CompanyAddress.CompanyID=Company.CompanyID
        inner	join dbo.PostalAddress PostalAddress on PostalAddress.PostalAddressID = CompanyAddress.PostalAddressID
        left	outer join dbo.Country TaxCountry on TaxCountry.CountryCodeISO2Alpha=LEFT(CompanyFinancial.TaxNumber,2) and CompanyFinancial.TaxNumber Like '__[0-9][0-9]%'
        left	outer join dbo.Country AddressCountry on AddressCountry.CountryID = PostalAddress.CountryID
        left	outer join dbo.EUCountry EUCountry on EUCountry.CountryID =  ISNULL(TaxCountry.CountryID,AddressCountry.CountryID)
        left	outer join dbo.Currency CompanyCurrency on CompanyCurrency.CurrencyID = CompanyFinancial.ExchangeCurrencyID 
        left	outer join dbo.Currency CentreCurrency on CentreCurrency.CurrencyID = Centre.CurrencyID 
        left	outer join dbo.D365Language D365Language on D365Language.LanguageID = ISNULL(CompanyFinancial.LanguageID,Centre.LanguageID)
        left	outer join dbo.FiscalStatusType FiscalStatusType on FiscalStatusType.FiscalStatusTypeID = CompanyFinancial.FiscalStatusTypeID
        where Centre.CountryID=607
