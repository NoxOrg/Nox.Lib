using Microsoft.CodeAnalysis;
using System.Text;

namespace Nox.Generator.Generators
{
    internal class DbContextGenerator : BaseGenerator
    {
        internal DbContextGenerator(GeneratorExecutionContext context) : base(context) { }

        internal bool AddDbContext()
        {
            var sb = new StringBuilder();

            sb.AppendLine(@"// autogenerated");
            sb.AppendLine(@"using Microsoft.EntityFrameworkCore;");
            sb.AppendLine(@"using Nox.Data;");
            sb.AppendLine(@"using Nox.Core.Interfaces.Database;");
            sb.AppendLine(@"using Microsoft.EntityFrameworkCore.Design;");
            sb.AppendLine(@"using MySql.EntityFrameworkCore.Extensions;");
            sb.AppendLine(@"using Microsoft.Extensions.DependencyInjection;");
            sb.AppendLine(@"");
            sb.AppendLine(@"namespace Nox;");
            sb.AppendLine(@"");
            sb.AppendLine($@"public class NoxDbContext : DynamicDbContext");
            sb.AppendLine(@"{");
            sb.AppendLine(@"    public NoxDbContext(");
            sb.AppendLine(@"        DbContextOptions<DynamicDbContext> options,");
            sb.AppendLine(@"        IDynamicModel dynamicDbModel");
            sb.AppendLine(@"    )");
            sb.AppendLine(@"    : base(options, dynamicDbModel) { }");
            sb.AppendLine(@"}");
            sb.AppendLine(@"");
            sb.AppendLine(@"");
            sb.AppendLine(@"// https://www.svrz.com/unable-to-resolve-service-for-type-microsoft-entityframeworkcore-storage-typemappingsourcedependencies/");
            sb.AppendLine(@"");
            sb.AppendLine(@"public class MysqlEntityFrameworkDesignTimeServices : IDesignTimeServices");
            sb.AppendLine(@"{");
            sb.AppendLine(@"    public void ConfigureDesignTimeServices(IServiceCollection serviceCollection)");
            sb.AppendLine(@"    {");
            sb.AppendLine(@"        serviceCollection.AddEntityFrameworkMySQL();");
            sb.AppendLine(@"        new EntityFrameworkRelationalDesignServicesBuilder(serviceCollection)");
            sb.AppendLine(@"            .TryAddCoreServices();");
            sb.AppendLine(@"    }");
            sb.AppendLine(@"}");

            GenerateFile(sb, "NoxDbContext");

            return true;
        }
    }
}