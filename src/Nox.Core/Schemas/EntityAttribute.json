{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "NOX Entity Attribute",
    "description": "Defines a NOX entity attribute",
    "type": "object",
    "additionalProperties": false,
    "required": ["name"],
    "properties": {
        "name": {
            "type": "string",
            "description": "The name of the attribute"
        },
        "description": {
            "type": "string",
            "description": "The attribute description"
        },
        "type": {
            "type": "string",
            "description": "The type of the attribute. Defaults is 'string'.",
            "oneOf": [
                {"const": "string", "description": "A string value" },
                {"const": "varchar", "description": "A non-Unicode string value" },
                {"const": "nvarchar", "description": "A Unicode string value" },
                {"const": "char", "description": "A charachter" },
                {"const": "url", "description": "A Uniform Resource Locator (typically as web address)" },
                {"const": "email", "description": "An email address" },
                {"const": "guid", "description": "A Globally Unique Identifier" },
                {"const": "date", "description": "A date" },
                {"const": "time", "description": "A time" },
                {"const": "timespan", "description": "A span of time/duration" },
                {"const": "datetime", "description": "A date and time value" },
                {"const": "bool", "description": "A boolean value denoting yes/no or true/false" },
                {"const": "boolean", "description": "A boolean value denoting yes/no or true/false" },
                {"const": "object", "description": "An object" },
                {"const": "int", "description": "An integer value" },
                {"const": "uint", "description": "An unsigned (positive) integer value" },
                {"const": "tinyint", "description": "A small integer value" },
                {"const": "bigint", "description": "A large integer value" },
                {"const": "money", "description": "Money with decimals" },
                {"const": "smallmoney", "description": "A small money value" },
                {"const": "decimal", "description": "A decinmal value" },
                {"const": "real", "description": "A real number" },
                {"const": "float", "description": "A floating point number" },
                {"const": "bigreal", "description": "A large real number" },
                {"const": "bigfloat", "description": "A large floating point number" }
            ]
        },
        "isAutoNumber": {
            "type": "boolean",
            "description": "Indicates if this attribute is automatically inremented"
        },
        "isRequired": {
            "type": "boolean",
            "description": "Indicates if this attribute is a required value"
        },
        "isUnicode": {
            "type": "boolean",
            "description": "Indicates if this attribute contains Unicode characters"
        },
        "canFilter": {
            "type": "boolean",
            "description": "Indicates if this attribute can be searched on or filtered"
        },
        "canSort": {
            "type": "boolean",
            "description": "Indicates if this attribute is sometimes required to be sorted on"
        },
        "minWidth": {
            "type": "integer",
            "description": "The minimum characters allowed for this attribute"
        },
        "maxWidth": {
            "type": "integer",
            "description": "The maximum characters allowed for this attribute"
        },
        "minValue": {
            "type": "integer",
            "description": "The minimum value allowed for this attribute"
        },
        "maxValue": {
            "type": "integer",
            "description": "The maximum value allowed for this attribute"
        },
        "precision": {
            "type": "integer",
            "description": "The number of decimal digits allowed for this attribute"
        },
        "default": {
            "type": ["string", "integer", "boolean", "null", "number", "object", "array"],
            "description": "The default value for this attribute"
        },
        "formula": {
            "type": "string",
            "formula": "The formula expressed in C# to calculate this value. See documentation."
        }
    }
}

